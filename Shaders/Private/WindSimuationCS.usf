#include "/Engine/Public/Platform.ush"

RWStructuredBuffer<float4> WindGrid;
float DeltaTime;
float Viscosity;
uint3 GridSize;

[numthreads(8, 8, 8)]
void MainCS(uint3 DTid : SV_DispatchThreadID)
{
    if (any(DTid >= GridSize))
        return;

    uint index = DTid.x + DTid.y * GridSize.x + DTid.z * GridSize.x * GridSize.y;
    
    float4 currentCell = WindGrid[index];
    float4 diffusion = 0;

    // Simple 6-point stencil diffusion
    if (DTid.x > 0)
        diffusion += WindGrid[index - 1];
    if (DTid.x < GridSize.x - 1)
        diffusion += WindGrid[index + 1];
    if (DTid.y > 0)
        diffusion += WindGrid[index - GridSize.x];
    if (DTid.y < GridSize.y - 1)
        diffusion += WindGrid[index + GridSize.x];
    if (DTid.z > 0)
        diffusion += WindGrid[index - GridSize.x * GridSize.y];
    if (DTid.z < GridSize.z - 1)
        diffusion += WindGrid[index + GridSize.x * GridSize.y];

    diffusion = diffusion / 6.0f - currentCell;
    
    WindGrid[index] = currentCell + diffusion * Viscosity * DeltaTime;
}